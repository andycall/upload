{
  "name": "jfum",
  "version": "0.3.0",
  "description": "Minimal jQuery File Upload Middleware",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "start": "supervisor -w . -- examples/server.coffee",
    "build": "coffee --bare --compile --output lib/ src/*.coffee",
    "prepublish": "coffee --bare --compile --output lib/ src/*.coffee",
    "postpublish": "rm -rf lib/*",
    "test": "mocha -w -b -c --check-leaks test/suite.coffee -R progress --compilers coffee:coffee-script/register",
    "test-drone": "mocha -b -c --check-leaks test/suite.coffee -R spec --compilers coffee:coffee-script/register"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Turistforeningen/jfum.git"
  },
  "keywords": [
    "aws",
    "s3",
    "imagemagic",
    "image",
    "resize",
    "rename",
    "upload"
  ],
  "contributors": [
    {
      "name": "Håvard Ranum",
      "email": "havard.ranum@bouvet.no"
    },
    {
      "name": "Hans Kristian Flaatten",
      "email": "hans.kristian.flaatten@turistforeningen.no"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Turistforeningen/jfum/issues"
  },
  "homepage": "https://github.com/Turistforeningen/jfum",
  "devDependencies": {
    "coffee-script": "^1.7.1",
    "express": "^4.4.3",
    "mocha": "^1.20.1",
    "morgan": "^1.1.1",
    "supervisor": "^0.6.0"
  },
  "dependencies": {
    "multiparty": "^3.2.8"
  },
  "engines": {
    "node": ">=0.10.3 <0.12"
  },
  "os": [
    "!win32"
  ],
  "readme": "jQuery File Upload Middleware [![Build Status](https://drone.io/github.com/Turistforeningen/node-jfum/status.png)](https://drone.io/github.com/Turistforeningen/node-jfum/latest)\n=============================\n\n[![NPM](https://nodei.co/npm/jfum.png?downloads=true)](https://www.npmjs.org/package/jfum)\n\n`Warning` this module is currently in active development and will change without\nnotice!\n\n## Features\n\n* Bare minimal – no extra stuff\n* Made for Express 4.x\n\n## Requirements\n\n* Node.JS >= 0.10\n* Express >= 4\n\n## Install\n\n```\nnpm install jfum --save\n```\n\n## Usage\n\n```javascript\nvar JFUM = require('JFUM');\nvar jfum = new JFUM({\n  tmpDir: '/tmp',\n  minFileSize: 204800,  // 200 kB\n  maxFileSize: 5242880, // 5 mB\n  acceptFileTypes: /\\.(gif|jpe?g|png)$/i\n});\n```\n\n### OPTIONS\n\njQuery File Upload makes an OPTIONS request to the server before starting the\nuppload to make sure that it can upload to the given server.\n\n```javascript\napp.options('/upload', jfum.optionsHandler.bind(jfum));\n```\n\n### POST\n\n```javascript\napp.post('/upload', jfum.postHandler.bind(jfum), function(req, res) {\n  for (var i = 0; i < res.jfum.files.length; i++) {\n    var file = res.jfum.files[i];\n    if (typeof file === 'object' && typeof file.error === 'undefined') {\n      // file.path - file location on disk\n      // file.name - original file name\n      // file.size - file size on disk\n      // file.mime - file mime type\n    } else {\n      // the file was rejected or not uploaded correctly\n      // error message will be in req.jfum.error\n    }\n  }\n});\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "jfum@0.3.0",
  "_shasum": "372d13469e923939b8d7704ce362b052c17e07f9",
  "_from": "jfum@",
  "_resolved": "https://registry.npmjs.org/jfum/-/jfum-0.3.0.tgz"
}
